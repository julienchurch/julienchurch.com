
==================== FINAL INTERFACE ====================
2016-02-14 08:38:49.478367 UTC

interface main@main:Model.ResponseTypes 7102
  interface hash: 5f20df26dd0e45a9f45646ab8ee77d2c
  ABI hash: 612df62bed49cd127306fce19c9ed563
  export-list hash: d7468dd8be5feb8aa6d2441b013e1f68
  orphan hash: 201c8714d8117518d196f47fff69a413
  flag hash: a70e25fd9bf72de6becbc02b29f6e54b
  sig of: Nothing
  used TH splices: True
  where
exports:
  Model.ResponseTypes.dropLbl
  Model.ResponseTypes.CommonResponse{Model.ResponseTypes.CommonError Model.ResponseTypes.CommonSuccess}
module dependencies:
package dependencies: aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      dlist-0.7.1.1@dlist_CWmYfPEEnFvAl2glQ7oHsq ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy integer-gmp-1.0.0.0
                      pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR
                      primitive-0.6@primi_3d4UsQu7pJCEtlsxN3gLjk
                      scientific-0.3.3.8@scien_5NQHiMKEgH2DOLHdLSFbA2
                      template-haskell-2.10.0.0 text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a
                      vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs
orphans: aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Generic
         aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Instances
         attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Format.Parse
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Fusion.Stream
         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed
family instance modules: attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         dlist-0.7.1.1@dlist_CWmYfPEEnFvAl2glQ7oHsq:Data.DList
                         pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR:Text.PrettyPrint.HughesPJ
                         primitive-0.6@primi_3d4UsQu7pJCEtlsxN3gLjk:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashSet
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Primitive
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Storable
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed.Base
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.TH 49d4b653e0c5789b03a812a107857ea6
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Class ad68768181ba539246931e90d726eff2
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Instances 337fa26c5d8aef44d58b1e5e032d6e4d
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Internal 84ddf0c0766fc7d47c29a73a4af0b3b0
import  -/  base-4.8.1.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.List f31ed8784b3e05f1397195751f7d74ea
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text a305d268b7ef3fbd1de87bd464ac8e2a
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Internal 9aaf446b91649c416d85a19f08d51f8e
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show 247f8009f433354faed2b5a5615705b2
8a26deeb6a41d9dbb424fcc9132c4953
  $fEqCommonResponse ::
    GHC.Classes.Eq Model.ResponseTypes.CommonResponse
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Model.ResponseTypes.CommonResponse
                  Model.ResponseTypes.$fEqCommonResponse_$c==
                  Model.ResponseTypes.$fEqCommonResponse_$c/= -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fEqCommonResponse_$c/= ::
    Model.ResponseTypes.CommonResponse
    -> Model.ResponseTypes.CommonResponse -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Model.ResponseTypes.CommonResponse
                   b :: Model.ResponseTypes.CommonResponse ->
                 case a2 of wild {
                   Model.ResponseTypes.CommonError a3
                   -> case b of wild1 {
                        Model.ResponseTypes.CommonError b1
                        -> case a3 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt2 dt5) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.ByteArray#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.State#
                                                                                                                GHC.Prim.RealWorld
                                                                                                           -> (# GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                 GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds11 ds12 ->
                                case GHC.Prim.narrow32Int# ds12 of wild6 {
                                  DEFAULT -> GHC.Types.True 0 -> GHC.Types.False } } } } }
                        Model.ResponseTypes.CommonSuccess ipv -> GHC.Types.True }
                   Model.ResponseTypes.CommonSuccess a3
                   -> case b of wild1 {
                        Model.ResponseTypes.CommonError ipv -> GHC.Types.True
                        Model.ResponseTypes.CommonSuccess b1
                        -> case a3 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                           case b1 of wild3 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt2 dt5) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case {__pkg_ccall text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.ByteArray#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.Word#
                                                                                                           -> GHC.Prim.State#
                                                                                                                GHC.Prim.RealWorld
                                                                                                           -> (# GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                 GHC.Prim.Int# #)}
                                       dt
                                       (GHC.Prim.int2Word# dt1)
                                       dt3
                                       (GHC.Prim.int2Word# dt4)
                                       (GHC.Prim.int2Word# dt2)
                                       GHC.Prim.realWorld# of wild5 { (#,#) ds11 ds12 ->
                                case GHC.Prim.narrow32Int# ds12 of wild6 {
                                  DEFAULT -> GHC.Types.True 0 -> GHC.Types.False } } } } } } }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fEqCommonResponse_$c== ::
    Model.ResponseTypes.CommonResponse
    -> Model.ResponseTypes.CommonResponse -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Model.ResponseTypes.CommonResponse
                   ds1 :: Model.ResponseTypes.CommonResponse ->
                 case ds of wild {
                   Model.ResponseTypes.CommonError a2
                   -> case ds1 of wild1 {
                        Model.ResponseTypes.CommonError b1 -> Data.Text.$c== a2 b1
                        Model.ResponseTypes.CommonSuccess ipv -> GHC.Types.False }
                   Model.ResponseTypes.CommonSuccess a2
                   -> case ds1 of wild1 {
                        Model.ResponseTypes.CommonError ipv -> GHC.Types.False
                        Model.ResponseTypes.CommonSuccess b1
                        -> Data.Text.$c== a2 b1 } }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fFromJSONCommonResponse ::
    Data.Aeson.Types.Class.FromJSON Model.ResponseTypes.CommonResponse
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Model.ResponseTypes.$fFromJSONCommonResponse_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0]
                          <Model.ResponseTypes.CommonResponse>_N)) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fFromJSONCommonResponse_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Model.ResponseTypes.CommonResponse
  {- Arity: 1, Strictness: <S,1*U> -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fShowCommonResponse ::
    GHC.Show.Show Model.ResponseTypes.CommonResponse
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Model.ResponseTypes.CommonResponse
                  Model.ResponseTypes.$fShowCommonResponse_$cshowsPrec
                  Model.ResponseTypes.$fShowCommonResponse_$cshow
                  Model.ResponseTypes.$fShowCommonResponse_$cshowList -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fShowCommonResponse1 ::
    Model.ResponseTypes.CommonResponse -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Model.ResponseTypes.CommonResponse
                   w1 :: GHC.Base.String ->
                 Model.ResponseTypes.$w$cshowsPrec 0 w w1) -}
6ef72fe99f0af0806556944ba2ae1f28
  $fShowCommonResponse2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CommonSuccess "#) -}
3e7da8edf4b721cd4af69be2826914de
  $fShowCommonResponse3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CommonError "#) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fShowCommonResponse_$cshow ::
    Model.ResponseTypes.CommonResponse -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Model.ResponseTypes.CommonResponse ->
                 Model.ResponseTypes.$fShowCommonResponse_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fShowCommonResponse_$cshowList ::
    [Model.ResponseTypes.CommonResponse] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Model.ResponseTypes.CommonResponse
                   Model.ResponseTypes.$fShowCommonResponse1) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fShowCommonResponse_$cshowsPrec ::
    GHC.Types.Int
    -> Model.ResponseTypes.CommonResponse -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Model.ResponseTypes.CommonResponse
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Model.ResponseTypes.$w$cshowsPrec ww1 w1 w2 }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fToJSONCommonResponse ::
    Data.Aeson.Types.Class.ToJSON Model.ResponseTypes.CommonResponse
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Model.ResponseTypes.$fToJSONCommonResponse_$ctoJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0]
                          <Model.ResponseTypes.CommonResponse>_N)) -}
67b728208beb40fa4a3de2919557d75f
  $fToJSONCommonResponse1 :: Data.Aeson.Types.Internal.Pair
  {- Strictness: m,
     Unfolding: ((Model.ResponseTypes.$fToJSONCommonResponse3,
                  Model.ResponseTypes.$fToJSONCommonResponse2)) -}
c16833f7feb3d13aae9cd16398251a64
  $fToJSONCommonResponse2 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "CommonSuccess"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
23944871d7a2b4a4567ab1835e87f10a
  $fToJSONCommonResponse3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "tag"#) -}
ce4afbdc78f8c32e70b2951d02e6aa8c
  $fToJSONCommonResponse4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "contents"#) -}
965b02617abdaefdc7d4921c9dcb532d
  $fToJSONCommonResponse5 :: Data.Aeson.Types.Internal.Pair
  {- Strictness: m,
     Unfolding: ((Model.ResponseTypes.$fToJSONCommonResponse3,
                  Model.ResponseTypes.$fToJSONCommonResponse6)) -}
751a3a38276f794ee3e8aed6bde6f2cb
  $fToJSONCommonResponse6 :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "CommonError"# of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $fToJSONCommonResponse_$ctoJSON ::
    Model.ResponseTypes.CommonResponse
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Model.ResponseTypes.CommonResponse ->
                 case Model.ResponseTypes.$w$ctoJSON w of ww { (##) ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Model.ResponseTypes.CommonResponse
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   w :: Model.ResponseTypes.CommonResponse
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Model.ResponseTypes.CommonError b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Model.ResponseTypes.$fShowCommonResponse3
                             (case Data.Text.Show.$w$cshowsPrec b1 w1 of ww1 { (#,#) ww2 ww3 ->
                              GHC.Types.: @ GHC.Types.Char ww2 ww3 })
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Model.ResponseTypes.$fShowCommonResponse3
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows8
                                           w1) of ww1 { (#,#) ww2 ww3 ->
                                 GHC.Types.: @ GHC.Types.Char ww2 ww3 })) }
                   Model.ResponseTypes.CommonSuccess b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Model.ResponseTypes.$fShowCommonResponse2
                             (case Data.Text.Show.$w$cshowsPrec b1 w1 of ww1 { (#,#) ww2 ww3 ->
                              GHC.Types.: @ GHC.Types.Char ww2 ww3 })
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Model.ResponseTypes.$fShowCommonResponse2
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows8
                                           w1) of ww1 { (#,#) ww2 ww3 ->
                                 GHC.Types.: @ GHC.Types.Char ww2 ww3 })) } }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  $w$ctoJSON ::
    Model.ResponseTypes.CommonResponse
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: Model.ResponseTypes.CommonResponse ->
                 case w of wild {
                   Model.ResponseTypes.CommonError arg1
                   -> case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                Model.ResponseTypes.$fToJSONCommonResponse5
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Model.ResponseTypes.$fToJSONCommonResponse4,
                                    Data.Aeson.Types.Internal.$WString arg1)
                                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      (# dt #) }
                   Model.ResponseTypes.CommonSuccess arg1
                   -> case Data.Aeson.Types.Internal.$sfromList1
                             @ Data.Aeson.Types.Internal.Value
                             (GHC.Types.:
                                @ Data.Aeson.Types.Internal.Pair
                                Model.ResponseTypes.$fToJSONCommonResponse1
                                (GHC.Types.:
                                   @ Data.Aeson.Types.Internal.Pair
                                   (Model.ResponseTypes.$fToJSONCommonResponse4,
                                    Data.Aeson.Types.Internal.$WString arg1)
                                   (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                             (Data.HashMap.Base.Empty
                                @ Data.Text.Internal.Text
                                @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                      (# dt #) } }) -}
8a26deeb6a41d9dbb424fcc9132c4953
  data CommonResponse
    = CommonError Data.Text.Internal.Text
    | CommonSuccess Data.Text.Internal.Text
0a6ad6f50f16ae7d8bca0a1f78016bf6
  dropLbl :: GHC.Types.Int -> Data.Aeson.Types.Internal.Options
  {- Arity: 1, Strictness: <L,U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ i :: GHC.Types.Int ->
                 Data.Aeson.Types.Internal.Options
                   (GHC.List.drop @ GHC.Types.Char i)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject) -}
instance GHC.Classes.Eq [Model.ResponseTypes.CommonResponse]
  = Model.ResponseTypes.$fEqCommonResponse
instance Data.Aeson.Types.Class.FromJSON [Model.ResponseTypes.CommonResponse]
  = Model.ResponseTypes.$fFromJSONCommonResponse
instance GHC.Show.Show [Model.ResponseTypes.CommonResponse]
  = Model.ResponseTypes.$fShowCommonResponse
instance Data.Aeson.Types.Class.ToJSON [Model.ResponseTypes.CommonResponse]
  = Model.ResponseTypes.$fToJSONCommonResponse
"SPEC/Model.ResponseTypes parseJSON @ Text" [ALWAYS] forall tpl :: Data.Aeson.Types.Class.FromJSON
                                                                     Data.Text.Internal.Text
  Data.Aeson.Types.Class.parseJSON @ Data.Text.Internal.Text tpl
  = Data.Aeson.Types.Instances.$fFromJSONText0_$cparseJSON
"SPEC/Model.ResponseTypes toJSON @ Text" [ALWAYS] forall tpl :: Data.Aeson.Types.Class.ToJSON
                                                                  Data.Text.Internal.Text
  Data.Aeson.Types.Class.toJSON @ Data.Text.Internal.Text tpl
  = Data.Aeson.Types.Internal.$WString
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

